import org.tmatesoft.svn.core.wc.*
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'bugly'

def getSvnRevision() {
    ISVNOptions options = SVNWCUtil.createDefaultOptions(true)
    SVNClientManager clientManager = SVNClientManager.newInstance(options)
    SVNStatusClient statusClient = clientManager.getStatusClient()
    SVNStatus status = statusClient.doStatus(projectDir, false)
    SVNRevision revision = status.getCommittedRevision()
    return revision.getNumber()
}

def buglyAppId = 'eee8a85f65'
def buglyAppKey = '8db27032-a3c0-44f5-a8ed-426d633bf7de'

bugly {
    appId = buglyAppId
    appKey = buglyAppKey
}

android {
    compileSdkVersion var.compileSdkVersion
    buildToolsVersion var.buildToolsVersion

    defaultConfig {
        applicationId "funny.quizgame"
        minSdkVersion var.minSdkVersion
        targetSdkVersion var.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        multiDexKeepProguard file('multiDexKeep.pro')
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "d68a27577bcabdfd1c751219", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
                BUGLY_APP_ID : buglyAppId,
                BUGLY_APP_KEY: buglyAppKey
        ]
    }

    productFlavors {
        flavorDimensions "channel"
        promotion {
            manifestPlaceholders = [CHANNEL: 230, STORE: "", BUGLY_CHANNEL: "promotion"]
        }
        vivo {
            manifestPlaceholders = [CHANNEL: 10235, STORE: "vivo", BUGLY_CHANNEL: "vivo"]
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.buildType.name == "release") {
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    output.outputFileName = "FunnyQuizGame-${variant.buildType.name}-v${variant.versionName}-vc${variant.versionCode}_${variant.getFlavorName()}_svn${getSvnRevision()}.apk"
                }
            }
        }
    }

    signingConfigs {
        release {
            storeFile file('./FunnyQuizGame.jks')
            storePassword 'FunnyQuizGame123'
            keyAlias = 'FunnyQuizGame'
            keyPassword 'FunnyQuizGame123'
        }
        debug {
            storeFile file('./FunnyQuizGameDebug.jks')
            storePassword 'FunnyQuizGame123'
            keyAlias = 'FunnyQuizGameDebug'
            keyPassword 'FunnyQuizGame123'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dataBinding {
        enabled true
    }

    useLibrary 'org.apache.http.legacy'

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'MissingTranslation', 'ExtraTranslation'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':common')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt "androidx.room:room-compiler:$var.roomVersion"
    // For Kotlin use kapt instead of annotationProcessor
    kapt "com.github.bumptech.glide:compiler:$var.glideVersion"

    implementation 'com.github.Wynsbin:VerificationCodeInputView:1.0.2'
    //支付宝 SDK
    api(name: 'alipaySdk-15.7.4-20200228192259', ext: 'aar')

    implementation 'cn.jiguang.sdk:jpush:3.6.0'  // 此处以JPush 3.6.0 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.3.4'  // 此处以JCore 2.3.4 版本为例。

    // leakCanary
    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

}
